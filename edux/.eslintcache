[{"C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\index.js":"1","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\serviceWorker.js":"2","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\admin\\crudDicas\\index.jsx":"3","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\admin\\crudObjetivos\\index.jsx":"4","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\admin\\dashboard\\dashboard.jsx":"5","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\login\\index.jsx":"6","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\home\\index.jsx":"7","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\notfound\\index.jsx":"8","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\timeline\\index.jsx":"9","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\perfil\\index.jsx":"10","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\objetivos\\index.jsx":"11","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\admin\\crudCurso\\index.jsx":"12","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\admin\\crudTurmas\\index.jsx":"13","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\ranking\\index.jsx":"14","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\cadastroaluno\\index.jsx":"15","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\cursos\\index.jsx":"16","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\dicas\\index.jsx":"17","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\utils\\constants.jsx":"18","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\components\\header\\index.jsx":"19","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\components\\titulo\\index.jsx":"20","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\components\\footer\\index.jsx":"21"},{"size":3420,"mtime":1608231472495,"results":"22","hashOfConfig":"23"},{"size":5227,"mtime":1608226739685,"results":"24","hashOfConfig":"23"},{"size":8054,"mtime":1608226739674,"results":"25","hashOfConfig":"23"},{"size":4521,"mtime":1608226739675,"results":"26","hashOfConfig":"23"},{"size":2607,"mtime":1608226739676,"results":"27","hashOfConfig":"23"},{"size":3240,"mtime":1608226739680,"results":"28","hashOfConfig":"23"},{"size":4052,"mtime":1608226739679,"results":"29","hashOfConfig":"23"},{"size":829,"mtime":1608226739681,"results":"30","hashOfConfig":"23"},{"size":2568,"mtime":1608226739684,"results":"31","hashOfConfig":"23"},{"size":2586,"mtime":1608226739683,"results":"32","hashOfConfig":"23"},{"size":1700,"mtime":1608226739682,"results":"33","hashOfConfig":"23"},{"size":6450,"mtime":1608226739673,"results":"34","hashOfConfig":"23"},{"size":6150,"mtime":1608300879817,"results":"35","hashOfConfig":"23"},{"size":1844,"mtime":1608226739683,"results":"36","hashOfConfig":"23"},{"size":5124,"mtime":1608226739677,"results":"37","hashOfConfig":"23"},{"size":4475,"mtime":1608226739678,"results":"38","hashOfConfig":"23"},{"size":1716,"mtime":1608226739678,"results":"39","hashOfConfig":"23"},{"size":53,"mtime":1608232409142,"results":"40","hashOfConfig":"23"},{"size":3043,"mtime":1608226739671,"results":"41","hashOfConfig":"23"},{"size":318,"mtime":1608226739671,"results":"42","hashOfConfig":"23"},{"size":3660,"mtime":1608226739670,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"1biq3a9",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"47"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"47"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"47"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"47"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\index.js",["99","100","101","102","103","104","105","106","107","108","109","110","111","112"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport jwt_decode from 'jwt-decode'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\r\n\r\n\r\n//PÃ¡ginas\r\nimport Home from './pages/home';\r\nimport CadastrarAluno from './pages/cadastroaluno';\r\nimport Login from './pages/login';\r\nimport Ranking from './pages/ranking'\r\nimport NotFound from './pages/notfound';\r\nimport Dashboard from './pages/admin/dashboard/dashboard';\r\nimport CrudDicas from './pages/admin/crudDicas/';\r\nimport CrudObjetivos from './pages/admin/crudObjetivos/';\r\nimport Dicas from './pages/dicas';\r\nimport Timeline from './pages/timeline';\r\nimport Curso from './pages/admin/crudCurso';\r\nimport CrudTurmas from './pages/admin/crudTurmas';\r\nimport Cursos from './pages/cursos';\r\nimport Perfil from './pages/perfil';\r\nimport Objetivos from './pages/objetivos';\r\n\r\n\r\nconst token = localStorage.getItem('token-edux') \r\n\r\n// // Somente para quem nao tem cadastro\r\n// const RotaNaoCadastrado= ({component : Component, ...rest}) => (\r\n//   <Route\r\n//     {...rest}\r\n//     render = {\r\n//       props => \r\n//       token !== null ?\r\n//       <Redirect to={{pathname:'/', state:{from : props.location}}}/>:\r\n//     <Component {...props}/>\r\n//     }\r\n//   />\r\n// );\r\n// // Somente para alunos\r\n\r\n// const RotaAluno = ({component : Component, ...rest}) => (\r\n//   <Route\r\n//     {...rest}\r\n//     render = {\r\n//       props => \r\n//       token === null ?\r\n//       <Redirect to={{pathname:'/login', state:{from : props.location}}}/>:\r\n//     <Component {...props}/>\r\n//     }\r\n//   />\r\n// );\r\n// // Somente para professores\r\n\r\n// const RotaPrivada = ({component : Component, ...rest}) => (\r\n//   <Route\r\n//     {...rest}\r\n//     render = { props => \r\n//       token !== null && jwt_decode(token).role === 'Admin' ?\r\n//         <Component {...props} /> :\r\n//         <Redirect to={{pathname : '/login', state :{from : props.location}}} /> \r\n//     }\r\n//   />\r\n// );\r\n\r\n\r\n\r\nconst routing = (\r\n  <Router>\r\n    <Switch>\r\n      <Route exact path='/' component={Home} />\r\n      {/* <RotaNaoCadastrado path='/cadastrar' component={CadastrarAluno} />\r\n      <RotaNaoCadastrado path='/login' component ={Login}/>\r\n      <RotaPrivada path='/admin/dashboard' component={Dashboard} /> */}\r\n      <Router path='/admin/crudCursos' component={Curso} />\r\n      {/* <RotaPrivada path='/admin/crudObjetivos' component={CrudObjetivos} />\r\n      <RotaPrivada path='/admin/crudDicas' component={CrudDicas} /> */}\r\n      <Route path='/admin/crudTurmas' component={CrudTurmas} />\r\n      {/* <RotaAluno path='/dicas' component={Dicas} />\r\n      <RotaAluno path='/perfil' component={Perfil} />\r\n      <RotaAluno path='/timeline' component={Timeline} />\r\n      <RotaAluno path='/ranking' component={Ranking} />\r\n      <RotaAluno path='/objetivos' component={Objetivos} />\r\n      <RotaAluno path='/cursos' component={Cursos} /> */}\r\n\r\n       <Route component ={NotFound}/>\r\n    </Switch>\r\n  </Router>\r\n)\r\n\r\n\r\nReactDOM.render(\r\n  routing,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nserviceWorker.unregister();\r\n\r\n",["113","114"],"C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\serviceWorker.js",[],"C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\admin\\crudDicas\\index.jsx",["115","116","117"],"import React, { useEffect, useState } from 'react'\r\nimport { Container, Table, Button, Form, Card } from 'react-bootstrap';\r\nimport { url } from '../../../utils/constants'\r\nimport Menu from '../../../components/header'\r\nimport Rodape from '../../../components/footer'\r\nimport Titulo from '../../../components/titulo'\r\n\r\nconst CrudDica = () => {\r\n    const [idDica, setIdDica] = useState(0);\r\n    const [idUsuario, setIdUsuario] = useState(0);\r\n    const [titulo, setTitulo] = useState('');\r\n    const [texto, setTexto] = useState('');\r\n    const [dicas, setDicas] = useState([]);\r\n    const [usuario, setUsuario] = useState([]);\r\n    const [urlImagem, setUrlImagem] = useState('');\r\n   \r\n\r\n    useEffect(() => {\r\n        listarDicas()\r\n        listarUsuario()\r\n    }, []);\r\n\r\n    //listando usuario\r\n    const listarUsuario = () => {\r\n\r\n        fetch(`${url}/usuario`)\r\n            .then(response => response.json())\r\n            .then(dados => {\r\n                setUsuario(dados.data);\r\n                limparCampos();\r\n            })\r\n            .catch(err => console.error(err));\r\n    }\r\n\r\n    //listando dicas\r\n    const listarDicas = () => {\r\n\r\n        fetch(`${url}/dica`)\r\n            .then(response => response.json())\r\n            .then(dados => {\r\n                setDicas(dados.data);\r\n                limparCampos();\r\n\r\n            })\r\n            .catch(err => console.error(err));\r\n    }\r\n\r\n    const uploadFile = (event) => {\r\n\r\n        let formdata = new FormData();\r\n        formdata.append('arquivo', event.target.files[0]);\r\n        \r\n        fetch(`${url}/upload`,\r\n        {\r\n            method : 'POST',\r\n            body : formdata \r\n        })\r\n        .then(response => response.json())\r\n        .then(data =>{\r\n            console.log(data)\r\n            setUrlImagem(data.url);\r\n        })\r\n        .catch(err => console.error(err))\r\n    }\r\n\r\n    //editando \r\n    const editar = (event) => {\r\n     \r\n\r\n        fetch(`${url}/dica/${event.target.value}`, {\r\n            method : 'GET'\r\n        })\r\n        .then(response => response.json())\r\n        .then(dado => {\r\n            setIdDica(dado.IdDica);\r\n            setTitulo(dado.titulo);\r\n            setIdUsuario(dado.idUsuario);\r\n            setUrlImagem(dado.urlImagem);\r\n            setTexto(dado.texto);\r\n\r\n        })\r\n    }\r\n\r\n    //excluindo\r\n    const excluir = (event) => {\r\n      \r\n        console.log(event.target.value)\r\n\r\n        fetch(url + '/dica/' + event.target.value, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('token-edux')\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                alert('Dica removida!')\r\n                listarDicas()\r\n            })\r\n    }\r\n\r\n    const dica = {\r\n        idDica : idDica,\r\n        titulo: titulo,\r\n        idUsuario: idUsuario,\r\n        urlImagem : urlImagem,\r\n        texto : texto,\r\n    }\r\n\r\n   \r\n\r\n    const salvar = (dica) => {\r\n\r\n        let method = (idDica === 0 ? 'POST' : 'PUT');\r\n        let urlRequest = (idDica === 0 ? url + '/dica' : url + '/dica/' + idDica);\r\n\r\n\r\n        fetch(urlRequest, {\r\n            method: method,\r\n            body: JSON.stringify({\r\n                idDica : idDica,\r\n                titulo: titulo,\r\n                idUsuario: idUsuario,\r\n                urlImagem : urlImagem,\r\n                texto : texto,\r\n            }),\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'authorization': 'Bearer ' + localStorage.getItem('token-edux')\r\n            }\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                console.log(response.json());\r\n\r\n                alert('Dica cadastrada com sucesso!');\r\n            }\r\n        })\r\n    }\r\n\r\n    const limparCampos = () => {\r\n        setIdDica(0);\r\n        setTitulo(1);\r\n        setIdUsuario(0);\r\n        setUrlImagem('');\r\n        setTexto('');\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <Menu />\r\n           \r\n            <Titulo\r\n                    titulo=\"Dicas\" chamada=\"Gerencie suas dicas\" />\r\n                    <Container style={{ marginTop: '4em' }}>\r\n                  \r\n                <Card >\r\n                <Card.Body>\r\n                        <Form onSubmit={event => salvar(dica)}>\r\n                            <Form.Group controlId=\"formTitulo\">\r\n                                <Form.Label>TÃ­tulo</Form.Label>\r\n                                <Form.Control type=\"text\" value={titulo} onChange={event => setTitulo(event.target.value)} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formTexto\">\r\n                                <Form.Label>Texto</Form.Label>\r\n                                <Form.Control as=\"textarea\"  rows={3} value={texto} onChange={event => setTexto(event.target.value)} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formImagem\">\r\n                                <Form.File id=\"fileDica\" label=\"Imagem da dica\" onChange={event => uploadFile(event)} />\r\n                                { urlImagem && <img src={urlImagem} style={{ width : '160px'}} />}\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formUsuario\">\r\n                                <Form.Label>UsuÃ¡rio</Form.Label>\r\n                                <Form.Control as=\"select\" value={idUsuario} onChange={ event => setIdUsuario(event.target.value)}>\r\n                                    <option value={0}>Selecione</option>\r\n                                    {\r\n                                        usuario.map((item, index) => {\r\n                                            return (\r\n                                                <option key={index} value={item.idUsuario}>{item.nome}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Button type=\"submit\" style={{ background: '#00d65f', borderColor: '#00d65f' }}>Salvar</Button>\r\n                        </Form>\r\n                        \r\n                    </Card.Body>\r\n                </Card>\r\n                <Table style={{ background: '#FFFFFF', borderRadius: '10px', marginTop: '2em' }} striped hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Imagem</th>\r\n                            <th>Titulo</th>\r\n                            <th>Texto</th>\r\n                            <th>UsuÃ¡rio</th>\r\n                            <th>AÃ§Ãµes</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            dicas.map((item, index) => {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td><img src={item.urlImagem} style={{ width : '120px'}}/></td>\r\n                                        <td>{item.titulo}</td>\r\n                                        <td>{item.texto}</td>\r\n                                        <td>{item.idUsuario}</td>\r\n                                        <td>\r\n                                            <Button type=\"button\" variant=\"primary\" value={item.idDica} onClick={event => editar(event)}>Editar</Button>\r\n                                            <Button type=\"button\" variant=\"danger\" value={item.idDica}  onClick={event => excluir(event)}>Excluir</Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n\r\n\r\n                </Table>\r\n            </Container>\r\n            <Rodape />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CrudDica;\r\n","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\admin\\crudObjetivos\\index.jsx",["118"],"import React, { useState, useEffect } from 'react';\r\nimport Header from '../../../components/header'\r\nimport Footer from '../../../components/footer'\r\nimport Titulo from '../../../components/titulo'\r\nimport { Table, Container, Button, Card, Form } from 'react-bootstrap';\r\nimport { url } from '../../../utils/constants';\r\n\r\n\r\nconst CrudObjetivos = () => {\r\n    const [id, setId] = useState(0);\r\n    const [nome, setNome] = useState('');\r\n    const [pontuacao, setPontuacao] = useState('');\r\n    const [usuario, setUsuario] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        listar();\r\n    }, []);\r\n\r\n    \r\n    const listar = () => {\r\n\r\n        fetch(`${url}/usuario`)\r\n            .then(response => response.json())\r\n            .then(dados => {\r\n                setUsuario(dados.data);\r\n                limparCampos();\r\n            })\r\n            .catch(err => console.error(err));\r\n    }\r\n\r\n\r\n    const editar = (event) => {\r\n        event.preventDefault();\r\n\r\n        fetch(`${url}/usuario/${event.target.value}`, {\r\n            method : 'GET'\r\n        })\r\n        .then(response => response.json())\r\n        .then(dado => {\r\n            setId(dado.idUsuario);\r\n            setNome(dado.nome);\r\n            setPontuacao(dado.pontuacao);\r\n        })\r\n    }\r\n\r\n    \r\n    const remover = (event) => {\r\n        event.preventDefault();\r\n\r\n        fetch(`${url}/usuario/${event.target.value}`, {\r\n            method : 'DELETE',\r\n\r\n        })\r\n        .then(response => response.json())\r\n        .then(dados => {\r\n            alert('Usuario removido com sucesso!');\r\n\r\n            listar();\r\n        })\r\n        .catch(err => console.error(err))\r\n    }\r\n\r\n    const enviar = (event) => {\r\n        event.preventDefault();\r\n\r\n        const usuarios = {\r\n            idUsuario : id,\r\n            nome : nome,\r\n            pontuacao : pontuacao,\r\n        }\r\n\r\n\r\n\r\n        fetch(`${url}/usuario/${id}`, {\r\n            method : 'PUT',\r\n            body : JSON.stringify(usuarios),\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(dados => {\r\n            alert('Usuario editado com sucesso!');\r\n\r\n            listar();\r\n        })\r\n        .catch(err => console.error(err))\r\n\r\n    }\r\n\r\n    const limparCampos = () => {\r\n        setId(0);\r\n        setNome('');\r\n        setPontuacao('');\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n\r\n        <div>\r\n        <Header />\r\n        <Titulo titulo=\"Objetivos\" chamada=\"Gerencie seus Objetivos\" />\r\n\r\n        \r\n\r\n        <Container>\r\n\r\n        <Card>  \r\n            <Card.Body>\r\n                <Form onSubmit={event => enviar(event)}>\r\n                    <Form.Group controlId=\"formBasicNome\">\r\n                        <Form.Label>Nome</Form.Label>\r\n                        <Form.Control type=\"text\" value={nome} onChange={event => setNome(event.target.value)} placeholder=\"Nome\"></Form.Control>\r\n                        <Form.Label>PontuaÃ§Ã£o</Form.Label>\r\n                        <Form.Control type=\"text\" value={pontuacao} onChange={event => setPontuacao(event.target.value)} placeholder=\"PontuaÃ§Ã£o\"></Form.Control>\r\n                    </Form.Group>\r\n                    <Button type=\"submit\">Enviar</Button>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n\r\n        <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                    <th>Nome</th>\r\n                    <th>PontuaÃ§Ã£o</th>\r\n                    <th>AÃ§Ãµes</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    usuario.map((item, index) => {\r\n                        return (\r\n                            <tr key={index}>\r\n                                <td>{item.nome}</td>\r\n                                <td>{item.pontuacao}</td>\r\n                                <td>\r\n                                    <Button type=\"button\" variant=\"primary\" value={item.idUsuario} onClick={ event => editar(event)}>Editar</Button>\r\n                                    <Button type=\"button\" variant=\"danger\" value={item.idUsuario} onClick={event => remover(event)} style={{ marginLeft : '15px' }} >Remover</Button>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n            </tbody>\r\n            </Table>\r\n            </Container>\r\n\r\n        <Footer />\r\n        </div>\r\n\r\n    )\r\n\r\n};\r\n\r\nexport default CrudObjetivos;","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\admin\\dashboard\\dashboard.jsx",["119","120"],"import React, { useState, useEffect } from 'react';\r\nimport Header from '../../../components/header'\r\nimport Footer from '../../../components/footer'\r\nimport Titulo from '../../../components/titulo'\r\nimport { Card, CardGroup , Button } from 'react-bootstrap';\r\n\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Header />\r\n            <Titulo titulo=\"Dashboard\" chamada=\"Bem vindo!\" />\r\n\r\n            <CardGroup>\r\n                <Card className=\"text-center\">\r\n                    <Card.Img variant=\"top\" />\r\n                    <Card.Body>\r\n                        <Card.Title>Dicas</Card.Title>\r\n                        <Card.Text>\r\n                           Cadastre suas dicas\r\n                   </Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                    <Button href=\"/admin/cruddicas\">Vamos</Button> \r\n                    </Card.Footer>\r\n                </Card>\r\n                <Card className=\"text-center\">\r\n                    <Card.Img variant=\"top\" />\r\n                    <Card.Body>\r\n                        <Card.Title>Cursos</Card.Title>\r\n                        <Card.Text>\r\n                           Cadastre seus cursos\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                    <Button href=\"/admin/crudcursos\">Vamos</Button> \r\n                    </Card.Footer>\r\n                </Card>\r\n                <Card className=\"text-center\">\r\n                    <Card.Img variant=\"top\" />\r\n                    <Card.Body>\r\n                        <Card.Title>Objetivos</Card.Title>\r\n                        <Card.Text>\r\n                            Cadastre seus objetivos\r\n                     </Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                    <Button href=\"/admin/crudobjetivos\">Vamos</Button> \r\n                    </Card.Footer>\r\n                </Card>\r\n            </CardGroup>\r\n            <CardGroup>\r\n                <Card className=\"text-center\">\r\n                    <Card.Body>\r\n                        <Card.Title>Turmas</Card.Title>\r\n                        <Card.Text>\r\n                        Cadastre suas turmas\r\n                     </Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                    <Button href=\"/admin/crudobjetivos\">Vamos</Button> \r\n                    </Card.Footer>\r\n                </Card>\r\n                \r\n            </CardGroup>\r\n            <Footer />\r\n        </div>\r\n\r\n    )\r\n\r\n};\r\n\r\nexport default Dashboard;","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\login\\index.jsx",[],"C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\home\\index.jsx",[],"C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\notfound\\index.jsx",[],"C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\timeline\\index.jsx",["121"],"import React, { useState,useEffect } from 'react';\r\nimport { Table, Container, Button } from 'react-bootstrap';\r\nimport Header from '../../components/header'\r\nimport Footer from '../../components/footer'\r\nimport Titulo from '../../components/titulo'\r\nimport { url } from '../../utils/constants';\r\n\r\nconst Timeline = () => {\r\n\r\n    const [usuarios, setUsuarios] = useState([]);\r\n\r\n    useEffect(() => {\r\n        listar();\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    const listar = () => {\r\n        fetch(url + '/usuario')\r\n\r\n            \r\n            \r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setUsuarios(data)\r\n\r\n            })\r\n            .catch(err => console.error(err));\r\n        \r\n        }\r\n    \r\n    return(\r\n    <div>\r\n\r\n        <Header />\r\n\r\n        <Titulo titulo=\"Bem vindo\" chamada=\"Veja o progresso da sua turma\" />\r\n        <Container>\r\n\r\n        <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                    <th>Nome</th>\r\n                    <th>TÃ­tulo da Ãºltima postagem</th>\r\n                    <th>AÃ§Ã£o</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    \r\n                    <td>Maria Eduarda</td>\r\n                    <td>\"AlguÃ©m pode me ajudar?\"</td>\r\n                   <td>\r\n                   <Button type=\"button\" variant=\"primary\">Ver Postagem</Button>\r\n                   </td>\r\n                   \r\n                </tr>\r\n                <tr>\r\n                    \r\n                    <td>Mateus Gatti</td>\r\n                    <td>\"DÃºvida com essa questÃ£o de quÃ­mica!\"</td>\r\n                    <td>\r\n                   <Button type=\"button\" variant=\"primary\">Ver Postagem</Button>\r\n                   </td>\r\n                </tr>\r\n                <tr>\r\n                    \r\n                    <td>Giovani Merces</td>\r\n                    <td>\"Como fazer essa conta de matemÃ¡tica?\"</td>\r\n                    <td>\r\n                   <Button type=\"button\" variant=\"primary\">Ver Postagem</Button>\r\n                   </td>\r\n                </tr>\r\n                <tr>\r\n                    \r\n                    <td>Henrique Leandro</td>\r\n                    <td>\"NÃ£o consigo conectar com a API\"</td>\r\n                    <td>\r\n                   <Button type=\"button\" variant=\"primary\">Ver Postagem</Button>\r\n                   </td>\r\n                </tr>\r\n            </tbody>\r\n            </Table>\r\n        </Container>\r\n        <Footer />\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Timeline;","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\perfil\\index.jsx",["122"],"import React, { useState } from 'react';\r\nimport { Container, Button } from 'react-bootstrap';\r\nimport Header from '../../components/header';\r\nimport Footer from '../../components/footer';\r\nimport jwt_decode from 'jwt-decode'\r\nimport './index.css'\r\n\r\nconst Perfil = () => {\r\n    const token = localStorage.getItem('token-edux');\r\n    const [datas, setDatas] = useState([]);\r\n\r\n    fetch('http://localhost:5000/api/usuario/' + jwt_decode(token).family_name)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .then(dados => {\r\n            setDatas(dados);\r\n            console.log(dados)\r\n        })\r\n        .catch(err => console.error(err));\r\n\r\n\r\n    // const renderItem = () => {\r\n\r\n    //     return (\r\n    //         datas.map((item, index) => {\r\n    //             return (\r\n    //                 <div>\r\n    //                     <h5>\r\n    //                         {item.nome}\r\n    //                     </h5>\r\n    //                 </div>\r\n\r\n    //             )\r\n    //         })\r\n    //     )\r\n\r\n    // }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            <Header />\r\n            <br />\r\n            <Container className=' alert-success br-15 '>\r\n                <div className='d-flex align-items-center flex-column '>\r\n                    <img className='imgperfil mg-p' src=\"https://barcarena.pa.gov.br/portal/img/perfil/padrao.jpg\" alt=\"Imagem de Perfil\" />\r\n                    <h3>{jwt_decode(token).nameid}</h3>\r\n                    <h6>{jwt_decode(token).email}</h6>\r\n                    {/* {renderItem()} */}\r\n                </div>\r\n                <hr />\r\n                <div className='d-flex align-items-center flex-column   '>\r\n                    <div className='d-flex'>\r\n                        <div className='text-center  divPontuacao'>\r\n                            <h3>\r\n                                PontuaÃ§Ã£o Geral\r\n                        </h3>\r\n                            <h5>\r\n                                {jwt_decode(token).pontuacao}\r\n                            </h5>\r\n                        </div>\r\n\r\n                        <div className='text-center divPontuacao'>\r\n                            <h3>\r\n                                PontuaÃ§Ã£o Objetivo\r\n                        </h3>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <Button variant=\"primary\" className='mg-p' href=\"/ranking\"> Visualizar Ranking</Button>\r\n\r\n\r\n                </div>\r\n\r\n            </Container>\r\n            <Footer />\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Perfil;","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\objetivos\\index.jsx",["123","124"],"import React, { useState,useEffect } from 'react';\r\nimport { Table, Container, Button } from 'react-bootstrap';\r\nimport Header from '../../components/header'\r\nimport Footer from '../../components/footer'\r\nimport Titulo from '../../components/titulo'\r\nimport { url } from '../../utils/constants';\r\n\r\nconst Objetivos = () => {\r\n\r\n    const [usuarios, setUsuarios] = useState([]);\r\n\r\n    useEffect(() => {\r\n        listar();\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    const listar = () => {\r\n        fetch(url + '/usuario')\r\n\r\n            \r\n            \r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setUsuarios(data)\r\n\r\n            })\r\n            .catch(err => console.error(err));\r\n        \r\n        }\r\n    \r\n    return(\r\n    <div>\r\n\r\n        <Header />\r\n\r\n        <Titulo titulo=\"Objetivos\" chamada=\"Confira seus objetivos\" />\r\n        <Container>\r\n\r\n        <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                    <th>Objetivo</th>\r\n                    <th>Texto</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    \r\n                    <td>CrÃ­tico</td>\r\n                    <td>Isso Ã© um objetivo crÃ­tico</td>\r\n                  \r\n                   \r\n                </tr>\r\n                <tr>\r\n                    \r\n                    <td>Oculto</td>\r\n                    <td>Isso Ã© um objetivo oculto</td>\r\n                    <td>\r\n                  \r\n                   </td>\r\n                </tr>\r\n               \r\n            </tbody>\r\n            </Table>\r\n        </Container>\r\n        <Footer />\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Objetivos;","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\admin\\crudCurso\\index.jsx",["125"],"import React, { useEffect, useState } from 'react'\r\nimport { Container, Table, Button, Form, Card } from 'react-bootstrap';\r\nimport { url } from '../../../utils/constants'\r\nimport Menu from '../../../components/header'\r\nimport Rodape from '../../../components/footer'\r\nimport Titulo from '../../../components/titulo'\r\n\r\n\r\nconst CrudCurso = () => {\r\n    const [idCurso, setIdCurso] = useState(0);\r\n    const [idInstituicao, setidInstituicao] = useState(0);\r\n    const [titulo, setTitulo] = useState('');\r\n    const [cursos, setCursos] = useState([]);\r\n    const [instituicoes, setInstituicoes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        listarCursos()\r\n        listarInstituicao()\r\n    }, []);\r\n\r\n    const listarInstituicao = () => {\r\n\r\n        fetch(`${url}/instituicao`)\r\n            .then(response => response.json())\r\n            .then(dados => {\r\n                setInstituicoes(dados.data);\r\n                limparCampos();\r\n            })\r\n            .catch(err => console.error(err));\r\n    }\r\n\r\n    const listarCursos = () => {\r\n\r\n        fetch(`${url}/curso`)\r\n            .then(response => response.json())\r\n            .then(dados => {\r\n                setCursos(dados.data);\r\n                limparCampos();\r\n\r\n            })\r\n            .catch(err => console.error(err));\r\n    }\r\n\r\n    const editar = (event) => {\r\n        event.preventDefault();\r\n\r\n        fetch(url + '/curso/' + event.target.value, {\r\n            method : 'GET',\r\n            headers : {\r\n                'authorization' : 'Bearer ' + localStorage.getItem('token-edux')\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(dado => {\r\n            setIdCurso(dado.data.idCurso);\r\n            setTitulo(dado.data.Titulo);\r\n            setidInstituicao(dado.data.idInstituicao);\r\n            \r\n        })\r\n        .catch(err => console.error(err));\r\n    }\r\n\r\n\r\n    const excluir = (event) => {\r\n        event.preventDefault();\r\n\r\n        console.log(event.target.value)\r\n\r\n        fetch(url + '/curso/' + event.target.value, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('token-edux')\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                alert('Curso removido!')\r\n                listarCursos()\r\n            })\r\n    }\r\n\r\n    const curso = {\r\n        titulo: titulo,\r\n        idInstituicao: idInstituicao\r\n    }\r\n\r\n    const salvar = (event) => {\r\n\r\n        let method = (idCurso === 0 ? 'POST' : 'PUT');\r\n        let urlRequest = (idCurso === 0 ? url + '/curso' : url + '/curso/' + idCurso);\r\n\r\n\r\n        fetch(urlRequest, {\r\n            method: method,\r\n            body: JSON.stringify(curso),\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'authorization': 'Bearer ' + localStorage.getItem('token-edux')\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(dados => {\r\n            alert('Curso salvo');\r\n\r\n            listarCursos();\r\n        })\r\n        .catch(err => console.error(err))\r\n    }\r\n\r\n    const limparCampos = () => {\r\n        setIdCurso(0);\r\n        setidInstituicao(0);\r\n        setTitulo('');\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <Menu />\r\n            \r\n                <Titulo\r\n                    titulo=\"Cursos\" chamada=\"Gerencie os cursos\" />\r\n                    <Container style={{ marginTop: '4em' }}>\r\n                <Card >\r\n                <Card.Body>\r\n                        <Form onSubmit={event => salvar(curso)}>\r\n                            <Form.Group controlId=\"formNome\">\r\n                                <Form.Label>TÃ­tulo</Form.Label>\r\n                                <Form.Control type=\"text\" value={titulo} onChange={event => setTitulo(event.target.value)} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formInstituicao\">\r\n                                <Form.Label>InstituiÃ§Ã£o</Form.Label>\r\n                                <Form.Control as=\"select\" value={idInstituicao} onChange={ event => setidInstituicao(event.target.value)}>\r\n                                    <option value={0}>Selecione</option>\r\n                                    {\r\n                                        instituicoes.map((item, index) => {\r\n                                            return (\r\n                                                <option key={index} value={item.idInstituicao}>{item.nome}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Button type=\"submit\" style={{ background: '#00d65f', borderColor: '#00d65f' }}>Salvar</Button>\r\n                        </Form>\r\n                        \r\n                    </Card.Body>\r\n                </Card>\r\n                <Table style={{ background: '#FFFFFF', borderRadius: '10px', marginTop: '2em' }} striped hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Titulo</th>\r\n                            <th>InstituiÃ§Ã£o</th>\r\n                            <th>AÃ§Ãµes</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            cursos.map((item, index) => {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{item.titulo}</td>\r\n                                        <td>{item.idInstituicao}</td>\r\n                                        <td>\r\n                                            <Button type=\"button\" variant=\"primary\" value={item.idCurso} onClick={event => editar(event)}>Editar</Button>\r\n                                            <Button type=\"button\" variant=\"danger\" value={item.idCurso}  onClick={event => excluir(event)}>Excluir</Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n\r\n\r\n                </Table>\r\n            </Container>\r\n            <Rodape />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CrudCurso;","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\admin\\crudTurmas\\index.jsx",["126"],"C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\ranking\\index.jsx",["127"],"import React, { useState,useEffect } from 'react';\r\nimport { Table, Container } from 'react-bootstrap';\r\nimport Header from '../../components/header'\r\nimport Footer from '../../components/footer'\r\nimport Titulo from '../../components/titulo'\r\nimport { url } from '../../utils/constants';\r\n\r\nconst Ranking = () => {\r\n\r\n    const [usuarios, setUsuarios] = useState([]);\r\n\r\n    useEffect(() => {\r\n        listar();\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    const listar = () => {\r\n        fetch(url + '/usuario')\r\n\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setUsuarios(data)\r\n\r\n            })\r\n            .catch(err => console.error(err));\r\n        }\r\n    \r\n    return(\r\n    <div>\r\n\r\n        <Header />\r\n\r\n        <Titulo titulo=\"Ranking\" chamada=\"Veja o ranking dos alunos\" />\r\n        <Container>\r\n\r\n        <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Nome</th>\r\n                    <th>PontuaÃ§Ã£o total</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>1</td>\r\n                    <td>Joao Paulo</td>\r\n                    <td>92</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>2</td>\r\n                    <td>Livia Oliveira</td>\r\n                    <td>73</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>3</td>\r\n                    <td>Ana Gomes</td>\r\n                    <td>71</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>4</td>\r\n                    <td>Lucas Castro</td>\r\n                    <td>54</td>\r\n                </tr>\r\n            </tbody>\r\n            </Table>\r\n        </Container>\r\n        <Footer />\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Ranking;","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\cadastroaluno\\index.jsx",["128","129"],"import React, { useEffect, useState } from 'react';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport { url } from '../../utils/constants';\r\nimport Header from '../../components/header';\r\nimport Footer from '../../components/footer';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport LogoColorida from '../../assets/img/logo_colorida.png';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../cadastroaluno/index.css';\r\n\r\n\r\nconst CadastrarAluno = () => {\r\n    const [nome, setNome] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n    const [idPerfil, setIdPerfil] = useState(0);\r\n    const [perfil, setPerfil] = useState([])\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        listarPerfil()\r\n    }, []);\r\n\r\n    const listarPerfil = () => {\r\n        fetch(`${url}/perfil`)\r\n            .then(response => response.json())\r\n            .then(dados => {\r\n                setPerfil(dados.data);\r\n                limparCampos();\r\n            })\r\n            .catch(err => console.error(err));\r\n    }\r\n\r\n    const salvar = (event) => {\r\n        event.preventDefault();\r\n\r\n        fetch(`${url}/usuario`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                nome: nome,\r\n                email: email,\r\n                senha: senha,\r\n                idPerfil: idPerfil,\r\n            }),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    console.log(response.json());\r\n\r\n                    alert('Usuario cadastrado com sucesso! Por favor efetue o login');\r\n\r\n                    history.push('/login')\r\n                }\r\n            })\r\n    }\r\n\r\n    \r\n\r\n    const limparCampos = () => {\r\n        setIdPerfil(0);\r\n        setNome('');\r\n        setSenha('');\r\n        setEmail('');\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <Header />\r\n            <br />\r\n            <Container className='alert-success d-flex align-items-center flex-column border-bottom-0 rounded size-container-login' >\r\n\r\n                <div>\r\n                    <img className='imglogin' src={LogoColorida} alt=\"Logo Edux\" />\r\n                </div>\r\n\r\n                <h4>Cadastro</h4>\r\n                <small>Insira os dados abaixo</small>\r\n\r\n                <Form className='d-flex flex-column align-items-center size-container-login' onSubmit={event => salvar(event)} >\r\n\r\n                    <Form.Group controlId=\"formBasicName\" className='d-flex flex-row w-75  mt-30'>\r\n                        <Form.Label className='w-25'><p>Nome :</p> </Form.Label>\r\n                        <Form.Control className='w-75' type=\"text\" placeholder=\"Insira seu nome completo\" value={nome} onChange={event => setNome(event.target.value)} required />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='formBasicEmail' className='d-flex flex-row w-75  mt-30'>\r\n                        <Form.Label className='w-25' style={{ marginTop: '-25px' }} ><p>Email :</p></Form.Label>\r\n                        <Form.Control className='w-75' style={{ marginTop: '-25px' }} type='email' placeholder=\"Insira seu email\" value={email} onChange={event => setEmail(event.target.value)} required />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='formBasicPassword' className='d-flex flex-row w-75  mt-30'>\r\n                        <Form.Label style={{ marginTop: '-25px' }} className='w-25'><p>Senha :</p></Form.Label>\r\n                        <Form.Control style={{ marginTop: '-25px' }} className='w-75' type='password' placeholder='Insira sua Senha' value={senha} onChange={event => setSenha(event.target.value)} required />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formPerfil\" className='d-flex flex-row w-75  mt-30'>\r\n                        <Form.Label style={{ marginTop: '-20px' }} className='w-25'><p>UsuÃ¡rio :</p> </Form.Label>\r\n                        <Form.Control className='w-75' as=\"select\" value={idPerfil} onChange={event => setIdPerfil(event.target.value)} style={{ marginTop: '-25px' }}>\r\n                            <option value={0}>Selecione</option>\r\n                            {\r\n                                perfil.map((item, index) => {\r\n                                    return (\r\n                                        <option key={index} value={item.idPerfil}>{item.permissao}</option>\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n\r\n                    <a className=\"botao\" href='/login' style={{ marginTop: '-09px' }}>JÃ¡ tenho conta!</a>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\" className='mt-30' >\r\n                        Enviar\r\n                    </Button>\r\n\r\n                </Form>\r\n            </Container>\r\n            <Footer />\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default CadastrarAluno;","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\cursos\\index.jsx",["130","131","132","133","134","135","136","137","138"],"import React, { useEffect, useState } from 'react'\r\nimport { Container, Table, Button, Form, Card } from 'react-bootstrap';\r\nimport { url } from '../../utils/constants'\r\nimport Menu from '../../components/header'\r\nimport Rodape from '../../components/footer'\r\nimport Titulo from '../../components/titulo'\r\n\r\nconst CrudCurso = () => {\r\n    const [idCurso, setIdCurso] = useState(0);\r\n    const [idInstituicao, setidInstituicao] = useState(0);\r\n    const [titulo, setTitulo] = useState('');\r\n    const [cursos, setCursos] = useState([]);\r\n    const [instituicoes, setInstituicoes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        listarCursos()\r\n        listarInstituicao()\r\n    }, []);\r\n\r\n    const listarInstituicao = () => {\r\n\r\n        fetch(`${url}/instituicao`)\r\n            .then(response => response.json())\r\n            .then(dados => {\r\n                setInstituicoes(dados.data);\r\n                limparCampos();\r\n            })\r\n            .catch(err => console.error(err));\r\n    }\r\n\r\n    const listarCursos = () => {\r\n\r\n        fetch(`${url}/curso`)\r\n            .then(response => response.json())\r\n            .then(dados => {\r\n                setCursos(dados.data);\r\n                limparCampos();\r\n\r\n            })\r\n            .catch(err => console.error(err));\r\n    }\r\n\r\n    const editar = (event) => {\r\n        event.preventDefault();\r\n\r\n        fetch(`${url}/curso/${event.target.value}`, {\r\n            method : 'GET'\r\n        })\r\n        .then(response => response.json())\r\n        .then(dado => {\r\n            setIdCurso(dado.idCurso);\r\n            setTitulo(dado.titulo);\r\n            setidInstituicao(dado.idInstituicao);\r\n        })\r\n    }\r\n\r\n    const excluir = (event) => {\r\n        event.preventDefault();\r\n\r\n        console.log(event.target.value)\r\n\r\n        fetch(url + '/curso/' + event.target.value, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('token-edux')\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                alert('Curso removido!')\r\n                listarCursos()\r\n            })\r\n    }\r\n\r\n    const curso = {\r\n        titulo: titulo,\r\n        idInstituicao: idInstituicao\r\n    }\r\n\r\n    const salvar = (curso) => {\r\n\r\n        let method = (idCurso === 0 ? 'POST' : 'PUT');\r\n        let urlRequest = (idCurso === 0 ? url + '/curso' : url + '/curso/' + idCurso);\r\n\r\n\r\n        fetch(urlRequest, {\r\n            method: method,\r\n            body: JSON.stringify({\r\n                idCurso : idCurso,\r\n                titulo: titulo,\r\n                idInstituicao: idInstituicao\r\n            }),\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'authorization': 'Bearer ' + localStorage.getItem('token-edux')\r\n            }\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                console.log(response.json());\r\n\r\n                alert('Curso cadastrado com sucesso!');\r\n            }\r\n        })\r\n    }\r\n\r\n    const limparCampos = () => {\r\n        setIdCurso(0);\r\n        setidInstituicao(0);\r\n        setTitulo('');\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <Menu />\r\n            \r\n                <Titulo\r\n                    titulo=\"Cursos\" chamada=\"Verifique os cursos\" />\r\n                    <Container style={{ marginTop: '4em' }}>\r\n                \r\n                <Table style={{ background: '#FFFFFF', borderRadius: '10px', marginTop: '2em' }} striped hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Titulo</th>\r\n                            <th>InstituiÃ§Ã£o</th>\r\n                          \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            cursos.map((item, index) => {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{item.titulo}</td>\r\n                                        <td>{item.idInstituicao}</td>\r\n                                       \r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n\r\n\r\n                </Table>\r\n            </Container>\r\n            <Rodape />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CrudCurso;\r\n","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\pages\\dicas\\index.jsx",["139","140"],"import React, { useState,useEffect } from 'react';\r\nimport { Table, Container, Button } from 'react-bootstrap';\r\nimport Header from '../../components/header'\r\nimport Footer from '../../components/footer'\r\nimport Titulo from '../../components/titulo'\r\nimport { url } from '../../utils/constants';\r\n\r\nconst Dicas = () => {\r\n\r\n    const [usuarios, setUsuarios] = useState([]);\r\n\r\n    useEffect(() => {\r\n        listar();\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    const listar = () => {\r\n        fetch(url + '/usuario')\r\n\r\n            \r\n            \r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setUsuarios(data)\r\n\r\n            })\r\n            .catch(err => console.error(err));\r\n        \r\n        }\r\n    \r\n    return(\r\n    <div>\r\n\r\n        <Header />\r\n\r\n        <Titulo titulo=\"Dicas\" chamada=\"Confira suas dicas\" />\r\n        <Container>\r\n\r\n        <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                    <th>Professor</th>\r\n                    <th>Dica</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    \r\n                    <td>Paulo BrandÃ£o</td>\r\n                    <td>Lembre-se do espaÃ§o ao escrever o 'Bearer '</td>\r\n                  \r\n                   \r\n                </tr>\r\n                <tr>\r\n                    \r\n                    <td>Fernando Henrique</td>\r\n                    <td>Cuidado com as sabotagens</td>\r\n                    <td>\r\n                  \r\n                   </td>\r\n                </tr>\r\n               \r\n            </tbody>\r\n            </Table>\r\n        </Container>\r\n        <Footer />\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Dicas;","C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\utils\\constants.jsx",[],"C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\components\\header\\index.jsx",[],"C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\components\\titulo\\index.jsx",[],"C:\\Users\\fic\\Desktop\\TESTEE\\Edux_React\\edux\\src\\components\\footer\\index.jsx",[],{"ruleId":"141","severity":1,"message":"142","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":18},{"ruleId":"141","severity":1,"message":"145","line":7,"column":49,"nodeType":"143","messageId":"144","endLine":7,"endColumn":57},{"ruleId":"141","severity":1,"message":"146","line":12,"column":8,"nodeType":"143","messageId":"144","endLine":12,"endColumn":22},{"ruleId":"141","severity":1,"message":"147","line":13,"column":8,"nodeType":"143","messageId":"144","endLine":13,"endColumn":13},{"ruleId":"141","severity":1,"message":"148","line":14,"column":8,"nodeType":"143","messageId":"144","endLine":14,"endColumn":15},{"ruleId":"141","severity":1,"message":"149","line":16,"column":8,"nodeType":"143","messageId":"144","endLine":16,"endColumn":17},{"ruleId":"141","severity":1,"message":"150","line":17,"column":8,"nodeType":"143","messageId":"144","endLine":17,"endColumn":17},{"ruleId":"141","severity":1,"message":"151","line":18,"column":8,"nodeType":"143","messageId":"144","endLine":18,"endColumn":21},{"ruleId":"141","severity":1,"message":"152","line":19,"column":8,"nodeType":"143","messageId":"144","endLine":19,"endColumn":13},{"ruleId":"141","severity":1,"message":"153","line":20,"column":8,"nodeType":"143","messageId":"144","endLine":20,"endColumn":16},{"ruleId":"141","severity":1,"message":"154","line":23,"column":8,"nodeType":"143","messageId":"144","endLine":23,"endColumn":14},{"ruleId":"141","severity":1,"message":"155","line":24,"column":8,"nodeType":"143","messageId":"144","endLine":24,"endColumn":14},{"ruleId":"141","severity":1,"message":"156","line":25,"column":8,"nodeType":"143","messageId":"144","endLine":25,"endColumn":17},{"ruleId":"141","severity":1,"message":"157","line":28,"column":7,"nodeType":"143","messageId":"144","endLine":28,"endColumn":12},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":21,"column":8,"nodeType":"164","endLine":21,"endColumn":10,"suggestions":"165"},{"ruleId":"166","severity":1,"message":"167","line":172,"column":48,"nodeType":"168","endLine":172,"endColumn":98},{"ruleId":"166","severity":1,"message":"167","line":209,"column":45,"nodeType":"168","endLine":209,"endColumn":99},{"ruleId":"162","severity":1,"message":"169","line":18,"column":8,"nodeType":"164","endLine":18,"endColumn":10,"suggestions":"170"},{"ruleId":"141","severity":1,"message":"171","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"172","line":1,"column":27,"nodeType":"143","messageId":"144","endLine":1,"endColumn":36},{"ruleId":"141","severity":1,"message":"173","line":10,"column":12,"nodeType":"143","messageId":"144","endLine":10,"endColumn":20},{"ruleId":"141","severity":1,"message":"174","line":10,"column":12,"nodeType":"143","messageId":"144","endLine":10,"endColumn":17},{"ruleId":"141","severity":1,"message":"175","line":2,"column":28,"nodeType":"143","messageId":"144","endLine":2,"endColumn":34},{"ruleId":"141","severity":1,"message":"173","line":10,"column":12,"nodeType":"143","messageId":"144","endLine":10,"endColumn":20},{"ruleId":"162","severity":1,"message":"176","line":19,"column":8,"nodeType":"164","endLine":19,"endColumn":10,"suggestions":"177"},{"ruleId":"141","severity":1,"message":"178","line":65,"column":11,"nodeType":"143","messageId":"144","endLine":65,"endColumn":23},{"ruleId":"141","severity":1,"message":"173","line":10,"column":12,"nodeType":"143","messageId":"144","endLine":10,"endColumn":20},{"ruleId":"141","severity":1,"message":"142","line":6,"column":8,"nodeType":"143","messageId":"144","endLine":6,"endColumn":18},{"ruleId":"162","severity":1,"message":"179","line":23,"column":8,"nodeType":"164","endLine":23,"endColumn":10,"suggestions":"180"},{"ruleId":"141","severity":1,"message":"175","line":2,"column":28,"nodeType":"143","messageId":"144","endLine":2,"endColumn":34},{"ruleId":"141","severity":1,"message":"181","line":2,"column":36,"nodeType":"143","messageId":"144","endLine":2,"endColumn":40},{"ruleId":"141","severity":1,"message":"182","line":2,"column":42,"nodeType":"143","messageId":"144","endLine":2,"endColumn":46},{"ruleId":"141","severity":1,"message":"183","line":13,"column":12,"nodeType":"143","messageId":"144","endLine":13,"endColumn":24},{"ruleId":"162","severity":1,"message":"176","line":18,"column":8,"nodeType":"164","endLine":18,"endColumn":10,"suggestions":"184"},{"ruleId":"141","severity":1,"message":"185","line":43,"column":11,"nodeType":"143","messageId":"144","endLine":43,"endColumn":17},{"ruleId":"141","severity":1,"message":"186","line":57,"column":11,"nodeType":"143","messageId":"144","endLine":57,"endColumn":18},{"ruleId":"141","severity":1,"message":"187","line":75,"column":11,"nodeType":"143","messageId":"144","endLine":75,"endColumn":16},{"ruleId":"141","severity":1,"message":"188","line":80,"column":11,"nodeType":"143","messageId":"144","endLine":80,"endColumn":17},{"ruleId":"141","severity":1,"message":"175","line":2,"column":28,"nodeType":"143","messageId":"144","endLine":2,"endColumn":34},{"ruleId":"141","severity":1,"message":"173","line":10,"column":12,"nodeType":"143","messageId":"144","endLine":10,"endColumn":20},"no-unused-vars","'jwt_decode' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'CadastrarAluno' is defined but never used.","'Login' is defined but never used.","'Ranking' is defined but never used.","'Dashboard' is defined but never used.","'CrudDicas' is defined but never used.","'CrudObjetivos' is defined but never used.","'Dicas' is defined but never used.","'Timeline' is defined but never used.","'Cursos' is defined but never used.","'Perfil' is defined but never used.","'Objetivos' is defined but never used.","'token' is assigned a value but never used.","no-native-reassign",["189"],"no-negated-in-lhs",["190"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'listarDicas' and 'listarUsuario'. Either include them or remove the dependency array.","ArrayExpression",["191"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'listar'. Either include it or remove the dependency array.",["192"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'usuarios' is assigned a value but never used.","'datas' is assigned a value but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'listarCursos' and 'listarInstituicao'. Either include them or remove the dependency array.",["193"],"'limparCampos' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'listarPerfil'. Either include it or remove the dependency array.",["194"],"'Form' is defined but never used.","'Card' is defined but never used.","'instituicoes' is assigned a value but never used.",["195"],"'editar' is assigned a value but never used.","'excluir' is assigned a value but never used.","'curso' is assigned a value but never used.","'salvar' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"200","fix":"204"},"Update the dependencies array to be: [listarDicas, listarUsuario]",{"range":"205","text":"206"},"Update the dependencies array to be: [listar]",{"range":"207","text":"208"},"Update the dependencies array to be: [listarCursos, listarInstituicao]",{"range":"209","text":"210"},"Update the dependencies array to be: [listarPerfil]",{"range":"211","text":"212"},{"range":"213","text":"210"},[768,770],"[listarDicas, listarUsuario]",[593,595],"[listar]",[695,697],"[listarCursos, listarInstituicao]",[799,801],"[listarPerfil]",[681,683]]